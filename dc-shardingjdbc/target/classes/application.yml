server:
  port: 8084
spring:
  application:
    name: dc-web
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    props:
      sql:
        show: true
    dataSource:
      names: trade-0,trade-1
      trade-0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/nice_patrick_trade_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: shaobo1227
      trade-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/nice_patrick_trade_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: shaobo1227
    sharding:
      default-data-source-name: trade-0
      tables:
        trade_order:
          key-generator:
            column: user_no
            type: SNOWFLAKE
          actual-data-nodes: trade-$->{0..1}.trade_order_$->{0..3}
          database-strategy:
            inline:
              sharding-column: user_no
              algorithm-expression: trade-$->{(user_no.toLong() % 4).intdiv(2)}
          tableStrategy:
            inline:
              shardingColumn: user_no
              algorithm-expression: trade_order_$->{user_no.toLong() % 4}

mybatis:
  # model的包
  type-aliases-package:  com.snoweagle.dc.shadingjdbc.infra.dal.dataObject
  mapperLocations: classpath:dal/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    log-level: DEBUG